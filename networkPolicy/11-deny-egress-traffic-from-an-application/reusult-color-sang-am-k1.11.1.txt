[root@k11 11-fail]# kubectl run web --image=nginx --port 80 --expose \
>     --labels app=web
service/web created
deployment.apps/web created
[root@k11 11-fail]# k apply -f foo-deny-egress.yaml
networkpolicy.networking.k8s.io/foo-deny-egress created
[root@k11 11-fail]# k describe netpol foo-deny-egress
Name:         foo-deny-egress
Namespace:    default
Created on:   2018-08-31 16:24:28 +0900 KST
Labels:       <none>
Annotations:  kubectl.kubernetes.io/last-applied-configuration={"apiVersion":"networking.k8s.io/v1","kind":"NetworkPolicy","metadata":{"annotations":{},"name":"foo-deny-egress","namespace":"default"},"spec":{"egres...
Spec:
  PodSelector:     app=foo
  Allowing ingress traffic:
    <none> (Selected pods are isolated for ingress connectivity)
  Allowing egress traffic:
    <none> (Selected pods are isolated for egress connectivity)
  Policy Types: Egress
[root@k11 11-fail]# kubectl run --rm --restart=Never --image=alpine -i -t -l app=foo test -- ash
If you don't see a command prompt, try pressing enter.
/ #
/ # wget -qO- --timeout 1 http://web:80/
wget: bad address 'web:80'
/ # wget -qO- --timeout 1 http://www.example.com/
wget: bad address 'www.example.com'
/ # ping google.com
^C
/ #
/ #
/ # #waiting for apply new networkpolicy ...


[root@k11 11-fail]# k apply -f foo-deny-egress-except-dns.yaml
networkpolicy.networking.k8s.io/foo-deny-egress configured
[root@k11 11-fail]# k describe networkpol foo-deny-egress
error: the server doesn't have a resource type "networkpol"
[root@k11 11-fail]# k describe netpol foo-deny-egress
Name:         foo-deny-egress
Namespace:    default
Created on:   2018-08-31 16:24:28 +0900 KST
Labels:       <none>
Annotations:  kubectl.kubernetes.io/last-applied-configuration={"apiVersion":"networking.k8s.io/v1","kind":"NetworkPolicy","metadata":{"annotations":{},"name":"foo-deny-egress","namespace":"default"},"spec":{"egres...
Spec:
  PodSelector:     app=foo
  Allowing ingress traffic:
    <none> (Selected pods are isolated for ingress connectivity)
  Allowing egress traffic:
    To Port: 53/UDP
    To Port: 53/TCP
    To: <any> (traffic not restricted by source)
  Policy Types: Egress
[root@k11 11-fail]#



/ # wget --timeout 1 -O- http://web
Connecting to web (10.101.165.22:80)   <--- dns resolved~! 
wget: download timed out
/ # ping -c2 google.com
ping: bad address 'google.com'         <-- couldn't resolve google.com
/ # ping google.com
piping: bad address 'google.com'
/ # ping www.samsung.com
ping: bad address 'www.samsung.com'
/ # ping naver.com
ping: bad address 'naver.com'
/ # ping time.bora.net
ping: bad address 'time.bora.net'
/ # ping kaist.ac.kr
ping: bad address 'kaist.ac.kr'
/ #


[root@k11 11-fail]# k delete deploy,svc web
deployment.extensions "web" deleted
service "web" deleted
[root@k11 11-fail]# k delete netpol foo-deny-egress
networkpolicy.extensions "foo-deny-egress" deleted
[root@k11 11-fail]#

